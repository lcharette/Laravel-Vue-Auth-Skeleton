name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  PHPUnit:

    strategy:
      fail-fast: false
      matrix:
        operating_system: [ubuntu-latest]
        php_versions: ['7.4']
        database: ['mysql', 'sqlite']

    name: PHPUnit Tests - ${{ matrix.php_versions }} - ${{ matrix.operating_system }} - ${{ matrix.database }}
    runs-on: ${{ matrix.operating_system }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php_versions }}
        extensions: mbstring, dom, fileinfo, gd
        coverage: xdebug
        tools: pecl
    - name: Shutdown Ubuntu MySQL (SUDO)
      if: ${{ matrix.database == 'mysql' }}
      run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
    - name: Set up MySQL
      if: ${{ matrix.database == 'mysql' }}
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql database: 'laravel'
        mysql user: 'laravel'
        mysql password: 'password'
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Generate JWT Token
      run: php artisan jwt:secret
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      if: ${{ matrix.database == 'sqlite' }}
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit & MySQL Env
      if: ${{ matrix.database == 'mysql' }}
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_USER: laravel
        DB_PASSWORD: password
        DB_DATABASE: laravel
        DB_PORT: 3306
      run: vendor/bin/phpunit
    - name: Execute tests (Unit and Feature tests) via PHPUnit & SQLite Env
      if: ${{ matrix.database == 'sqlite' }}
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./_meta/coverage.xml
        fail_ci_if_error: true
